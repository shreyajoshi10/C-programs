char * originalDigits(char * s){
    int i, j, len;
    int cnt[10] = {0};
    int cnt_char[26] = {0};
    char* result = (char*) malloc(sizeof(char) * 100000);
    len = strlen(s);
    for (i = 0; i < len; i++) 
    {
        cnt_char[s[i] - 'a']++;
    }

    cnt[0] = cnt_char['z' - 'a'];
    cnt[2] = cnt_char['w' - 'a'];
    cnt[4] = cnt_char['u' - 'a'];
    cnt[6] = cnt_char['x' - 'a'];
    cnt[8] = cnt_char['g' - 'a'];

    cnt[3] = cnt_char['h' - 'a'] - cnt[8];
    cnt[5] = cnt_char['f' - 'a'] - cnt[4];
    cnt[7] = cnt_char['v' - 'a'] - cnt[5];
    cnt[1] = cnt_char['o' - 'a'] - cnt[0] - cnt[2] - cnt[4];
    cnt[9] = cnt_char['i' - 'a'] - cnt[5] - cnt[6] - cnt[8];

    j = 0;
    for (i = 0; i <= 9; i++) 
    {
        while (cnt[i] > 0) 
        {
            result[j] = i + '0';
            cnt[i]--;
            j++;
        }
    }
    result[j] = '\0';
    return result;
}
