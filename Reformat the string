#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char *reformat(char *s) {
    int len = strlen(s);
    int letters = 0, digits = 0;
    
    // count the number of letters and digits in the string
    for (int i = 0; i < len; i++) {
        if (isdigit(s[i])) {
            digits++;
        } else if (isalpha(s[i])) {
            letters++;
        }
    }
    
    // if the difference between the counts is greater than 1, return an empty string
    if (abs(letters - digits) > 1) {
        return "";
    }
    
    // allocate memory for the result string
    char *result = (char *) malloc((len + 1) * sizeof(char));
    int i = 0, j = 1;
    
    // place letters and digits in the appropriate positions in the result string
    if (letters >= digits) {
        for (int k = 0; k < len; k++) {
            if (isalpha(s[k])) {
                result[i] = s[k];
                i += 2;
            } else {
                result[j] = s[k];
                j += 2;
            }
        }
    } else {
        for (int k = 0; k < len; k++) {
            if (isdigit(s[k])) {
                result[i] = s[k];
                i += 2;
            } else {
                result[j] = s[k];
                j += 2;
            }
        }
    }
    
    // add a null terminator to the end of the result string
    result[len] = '\0';
    return result;
}

int main() {
    // example usage
    char s[] = "a0b1c2d3e4f5g6h7i8j9";
    char *result = reformat(s);
    printf("%s\n", result); // output: a1b2c3d4e5f6g7h8i9j
    free(result); // free the memory allocated for the result string
    return 0;
}
